//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
       

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// Layer definitions
#define BASE 0
#define NAV  1
#define SYM  2
#define FUNC 3
#define NUM  4

// Behavior customizations
&mt {
  quick-tap-ms = <100>;
  global-quick-tap;
  flavor = "tap-preferred";
  tapping-term-ms = <250>; // Match QMK's tapping-term value
};

&lt {
  quick-tap-ms = <150>;
  flavor = "balanced";
  tapping-term-ms = <250>;
};

/ {
    // Custom shift key implementation for ZMK
    behaviors {
        mo_comma: mo_comma {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp EXCL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        
        mo_dot: mo_dot {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp QMARK>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        
        mo_slash: mo_slash {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp FSLH>, <&kp BSLH>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    // Macros
    macros {
        email: email {
            label = "email_macro";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp J &kp A &kp N &kp N &kp I &kp K &kp AT &kp F &kp E &kp U &kp E &kp R &kp DOT &kp D &kp E &kp V>;
        };
        
        // Application switcher macro
        app_switch: app_switch {
            label = "app_switcher";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp LGUI>, <&macro_tap &kp TAB>, <&macro_pause_for_release>, <&macro_release &kp LGUI>;
        };
    };

    // Combos
    combos {
        compatible = "zmk,combos";
        
        combo_capsword {
            timeout-ms = <50>;
            key-positions = <11 19>; // A and O keys
            bindings = <&caps_word>;
        };
        
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>; // Q and W keys
            bindings = <&kp ESC>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
// ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
label= "BASE"                              ;
// ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
//             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
//             ┃     Q     ┃     W     ┃     F     ┃     P     ┃     B     ┃   ┃     J     ┃     L     ┃     U     ┃     Y     ┃     -     ┃
//             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
//             ┃  LSFT(A)  ┃  LCTRL(R) ┃  LALT(S)  ┃  LGUI(T)  ┃     G     ┃   ┃     M     ┃  LGUI(N)  ┃  LALT(E)  ┃  LCTRL(I) ┃  LSHFT(O) ┃
// ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
// ┃    HYPER  ┃     Z     ┃     X     ┃     C     ┃     D     ┃     V     ┃   ┃     K     ┃     H     ┃     ,     ┃     .     ┃     /     ┃    MEH    ┃
// ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┛
//                                     ┃  ALT(ESC) ┃  NAV(SPC) ┃ LGUI(TAB) ┃   ┃  NUM(RET) ┃ SYM(BSPC) ┃ FUNC(DEL) ┃
//                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
bindings = <
// ╷           ╷           ╷           ╷           ╷           ╷           ╷ - ╷           ╷           ╷           ╷           ╷           ╷           ╷

                &kp Q       &kp W       &kp F       &kp P       &kp B           &kp J       &kp L       &kp U       &kp Y       &kp MINUS
                &mt LSHFT A &mt LCTRL R &mt LALT S  &mt LGUI T  &kp G           &kp M       &mt LGUI N  &mt LALT E  &mt LCTRL I &mt LSHFT O
&kp LS(LC(LA(LGUI))) &kp Z  &kp X       &kp C       &kp D       &kp V           &kp K       &kp H       &mo_comma   &mo_dot     &mo_slash   &kp LS(LC(LALT))
                                        &kp ESC     &lt NAV SPACE &mt LGUI TAB  &lt NUM RET &lt SYM BSPC &lt FUNC DEL
            >;
        };

        nav_layer {
// ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
label= "NAV"                              ;
// ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
//             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
//             ┃           ┃           ┃           ┃           ┃           ┃   ┃           ┃ SWITCH WIN┃     UP    ┃           ┃           ┃
//             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
//             ┃           ┃           ┃           ┃           ┃           ┃   ┃           ┃  LEFT     ┃   DOWN    ┃   RIGHT   ┃           ┃
// ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
// ┃           ┃           ┃           ┃           ┃           ┃           ┃   ┃           ┃ SWITCH APP┃ SWITCH TAB┃ SWITCH TAB┃           ┃           ┃
// ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┛
//                                     ┃           ┃           ┃           ┃   ┃           ┃           ┃           ┃
//                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            bindings = <
// ╷           ╷           ╷           ╷           ╷           ╷           ╷ - ╷           ╷           ╷           ╷           ╷           ╷           ╷

                &trans      &trans      &trans      &trans      &trans          &trans      &kp LC(GRAVE) &kp UP     &trans      &trans
                &trans      &trans      &trans      &trans      &trans          &trans      &kp LEFT     &kp DOWN    &kp RIGHT   &trans
    &trans      &trans      &trans      &trans      &trans      &trans          &trans      &app_switch  &kp LG(LBRC) &kp LG(RBRC) &trans &trans
                                        &trans      &trans      &trans          &trans      &trans       &trans
            >;
        };

        sym_layer {
            label = "SYM";
            bindings = <
// ╷           ╷           ╷           ╷           ╷           ╷           ╷ - ╷           ╷           ╷           ╷           ╷           ╷           ╷

                &kp BSLH    &kp LT      &kp GT      &kp STAR    &trans          &kp AMPS    &kp GRAVE   &kp LBKT    &kp RBKT    &kp PRCNT
                &kp TILDE   &kp MINUS   &kp PLUS    &kp EQUAL   &kp HASH        &kp PIPE    &kp COLON   &kp LPAR    &kp RPAR    &kp SEMI
    &trans      &kp CARET   &kp FSLH    &kp DQT     &kp SQT     &kp LA(U)       &email      &kp DLLR    &kp LBRC    &kp RBRC    &kp AT  &trans
                                        &trans      &trans      &trans          &trans      &trans      &trans
            >;
        };

        func_layer {
            label = "FUNC";
            bindings = <
// ╷           ╷           ╷           ╷           ╷           ╷           ╷ - ╷           ╷           ╷           ╷           ╷           ╷           ╷

                &kp F12     &kp F7      &kp F8      &kp F9      &trans          &trans      &trans      &kp C_VOL_UP &trans     &trans
                &kp F11     &kp F4      &kp F5      &kp F6      &trans          &trans      &kp C_PREV  &kp C_VOL_DN &kp C_NEXT &trans
    &trans      &kp F10     &kp F1      &kp F2      &kp F3      &trans          &trans      &kp C_PP    &kp C_STOP   &kp C_MUTE &trans &trans
                                        &trans      &trans      &trans          &trans      &trans      &trans
            >;
        };

        num_layer {
            label = "NUM";
            bindings = <
// ╷           ╷           ╷           ╷           ╷           ╷           ╷ - ╷           ╷           ╷           ╷           ╷           ╷           ╷

                &trans      &kp N7      &kp N8      &kp N9      &trans           &bt BT_CLR  &bt BT_PRV  &bt BT_NXT  &out OUT_TOG &sys_reset
                &trans      &kp N4      &kp N5      &kp N6      &trans           &trans      &trans      &trans      &trans      &bootloader
    &trans      &trans      &kp N1      &kp N2      &kp N3      &trans           &trans      &trans      &trans      &trans      &trans &trans
                                        &kp N0      &trans      &trans           &trans      &trans      &trans
            >;
        };
    };
};
